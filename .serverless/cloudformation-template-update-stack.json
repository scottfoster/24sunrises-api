{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "TimezonesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-timezones"
      }
    },
    "FlickrLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-flickr"
      }
    },
    "UnsplashLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-unsplash"
      }
    },
    "GetutcLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-getutc"
      }
    },
    "SubmitimageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/app-dev-submitimage"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "app",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "app",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "TimezonesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1685333891462-2023-05-29T04:18:11.462Z/app.zip"
        },
        "Handler": "timezones.php",
        "Runtime": "provided.al2",
        "FunctionName": "app-dev-timezones",
        "MemorySize": 1024,
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:31"
        ]
      },
      "DependsOn": [
        "TimezonesLogGroup"
      ]
    },
    "FlickrLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1685333891462-2023-05-29T04:18:11.462Z/app.zip"
        },
        "Handler": "flickr.php",
        "Runtime": "provided.al2",
        "FunctionName": "app-dev-flickr",
        "MemorySize": 1024,
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:31"
        ]
      },
      "DependsOn": [
        "FlickrLogGroup"
      ]
    },
    "UnsplashLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1685333891462-2023-05-29T04:18:11.462Z/app.zip"
        },
        "Handler": "unsplash.php",
        "Runtime": "provided.al2",
        "FunctionName": "app-dev-unsplash",
        "MemorySize": 1024,
        "Timeout": 60,
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:31"
        ]
      },
      "DependsOn": [
        "UnsplashLogGroup"
      ]
    },
    "GetutcLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1685333891462-2023-05-29T04:18:11.462Z/app.zip"
        },
        "Handler": "getutc.php",
        "Runtime": "provided.al2",
        "FunctionName": "app-dev-getutc",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:31"
        ]
      },
      "DependsOn": [
        "GetutcLogGroup"
      ]
    },
    "SubmitimageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/app/dev/1685333891462-2023-05-29T04:18:11.462Z/app.zip"
        },
        "Handler": "submitimage.php",
        "Runtime": "provided.al2",
        "FunctionName": "app-dev-submitimage",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:31"
        ]
      },
      "DependsOn": [
        "SubmitimageLogGroup"
      ]
    },
    "TimezonesLambdaVersionyrF3Tc0ARLqbL8xhte4apq3wc5Zl9N1f3y4dY7hmrcM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "TimezonesLambdaFunction"
        },
        "CodeSha256": "7yjqnfomJv/yOABHjo94/fRrBijwUyjvSMZxXvov2kU="
      }
    },
    "FlickrLambdaVersion98r8mIUwuH1gFkKjvF4dR8jjjiJ0Nx0btisYEiEubk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FlickrLambdaFunction"
        },
        "CodeSha256": "7yjqnfomJv/yOABHjo94/fRrBijwUyjvSMZxXvov2kU="
      }
    },
    "UnsplashLambdaVersionyJjpjYRuFdinyH0SeZHCWUN1338nBgCUgW3qvV99I": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UnsplashLambdaFunction"
        },
        "CodeSha256": "7yjqnfomJv/yOABHjo94/fRrBijwUyjvSMZxXvov2kU="
      }
    },
    "GetutcLambdaVersionZwqHcGDsQ8wEta8CkzVWPz5cy0hu5FykdCZ6iC7XI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetutcLambdaFunction"
        },
        "CodeSha256": "7yjqnfomJv/yOABHjo94/fRrBijwUyjvSMZxXvov2kU="
      }
    },
    "SubmitimageLambdaVersionh0wbhmwFeWjPdpkNZPHv3RNfx8expE2i8GKUWNkD30": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SubmitimageLambdaFunction"
        },
        "CodeSha256": "7yjqnfomJv/yOABHjo94/fRrBijwUyjvSMZxXvov2kU="
      }
    },
    "TimezonesEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "TimezonesLambdaFunction",
                "Arn"
              ]
            },
            "Id": "timezonesSchedule"
          }
        ]
      }
    },
    "TimezonesLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "TimezonesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "TimezonesEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "FlickrEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(30 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "FlickrLambdaFunction",
                "Arn"
              ]
            },
            "Id": "flickrSchedule"
          }
        ]
      }
    },
    "FlickrLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FlickrLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "FlickrEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "UnsplashEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "UnsplashLambdaFunction",
                "Arn"
              ]
            },
            "Id": "unsplashSchedule"
          }
        ]
      }
    },
    "UnsplashLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UnsplashLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "UnsplashEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "GetutcEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Input": "{\"warmer\":true}",
            "Arn": {
              "Fn::GetAtt": [
                "GetutcLambdaFunction",
                "Arn"
              ]
            },
            "Id": "getutcSchedule"
          }
        ]
      }
    },
    "GetutcLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetutcLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "GetutcEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-app",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "GetutcLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetutcLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetutc": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetutcLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGetutc": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /getutc",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetutc"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetutc"
    },
    "SubmitimageLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SubmitimageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationSubmitimage": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "SubmitimageLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetSubmitimage": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /submitimage",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationSubmitimage"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationSubmitimage"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-app-dev-ServerlessDeploymentBucketName"
      }
    },
    "TimezonesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "TimezonesLambdaVersionyrF3Tc0ARLqbL8xhte4apq3wc5Zl9N1f3y4dY7hmrcM"
      },
      "Export": {
        "Name": "sls-app-dev-TimezonesLambdaFunctionQualifiedArn"
      }
    },
    "FlickrLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FlickrLambdaVersion98r8mIUwuH1gFkKjvF4dR8jjjiJ0Nx0btisYEiEubk"
      },
      "Export": {
        "Name": "sls-app-dev-FlickrLambdaFunctionQualifiedArn"
      }
    },
    "UnsplashLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UnsplashLambdaVersionyJjpjYRuFdinyH0SeZHCWUN1338nBgCUgW3qvV99I"
      },
      "Export": {
        "Name": "sls-app-dev-UnsplashLambdaFunctionQualifiedArn"
      }
    },
    "GetutcLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetutcLambdaVersionZwqHcGDsQ8wEta8CkzVWPz5cy0hu5FykdCZ6iC7XI"
      },
      "Export": {
        "Name": "sls-app-dev-GetutcLambdaFunctionQualifiedArn"
      }
    },
    "SubmitimageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SubmitimageLambdaVersionh0wbhmwFeWjPdpkNZPHv3RNfx8expE2i8GKUWNkD30"
      },
      "Export": {
        "Name": "sls-app-dev-SubmitimageLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-app-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-app-dev-HttpApiUrl"
      }
    }
  }
}